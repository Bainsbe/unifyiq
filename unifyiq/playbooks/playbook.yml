- name: Update Packages
  hosts: all
  become: yes
  tasks:
    - name: Update apt cache
      become_user: root
      apt:
        update_cache: yes

    - name: Install packages
      become_user: root
      apt:
        name: python3-pip
        state: present


- name: Install MySQL
  hosts: db
  become: yes
  become_user: ubuntu

  vars:
    mysql_user: "{{lookup('ansible.builtin.ini', 'username', section='Database', file='/home/ubuntu/unifyiq.ini')}}"
    mysql_password: "{{lookup('ansible.builtin.ini', 'password', section='Database', file='/home/ubuntu/unifyiq.ini')}}"
    mysql_db_name: "{{lookup('ansible.builtin.ini', 'name', section='Database', file='/home/ubuntu/unifyiq.ini')}}"
    sql_files:
      - /home/ubuntu/unifyiq/schema/database/Common.sql
      - /home/ubuntu/unifyiq/schema/database/ConnectorsMetaData.sql

  tasks:
    - name: Install packages
      become_user: root
      apt:
        name:
          - mysql-server
        state: present

    - name: Install MySQL client
      become_user: root
      pip:
        name: PyMySQL
        state: present
        executable: pip3

    - name: Create a MySQL user
      become_user: root
      mysql_user:
        name: "{{mysql_user}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        password: "{{mysql_password}}"
        priv: "*.*:ALL"
        state: present

    - name: Create a database
      mysql_db:
        login_user: "{{mysql_user}}"
        login_password: "{{mysql_password}}"
        login_host: localhost
        login_port: 3306
        name: "{{mysql_db_name}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present

    - name: Clone repository
      git:
        repo: https://github.com/unifyiq/unifyiq.git
        dest: /home/ubuntu/unifyiq
        version: main
        update: yes

    - name: Execute MySQL command file
      mysql_db:
        login_user: "{{mysql_user}}"
        login_password: "{{mysql_password}}"
        login_host: localhost
        login_port: 3306
        login_unix_socket: /var/run/mysqld/mysqld.sock
        db: "{{mysql_db_name}}"
        state: import
        target: "{{item}}"
      with_items: "{{ sql_files }}"


- name: Install UnifyIQ
  hosts: unifyiq
  gather_facts: true
  become: true
  become_user: ubuntu
  tasks:
    - name: Download file
      get_url:
        url: https://deb.nodesource.com/setup_18.x
        dest: /home/ubuntu/setup_18.x

    - name: Install nodejs setup
      become_user: root
      command: bash /home/ubuntu/setup_18.x
      args:
        chdir: /home/ubuntu/

    - name: Install nodejs
      become_user: root
      apt:
        name:
          - nodejs
          - nginx
        state: present

    - name: Clone repository
      git:
        repo: https://github.com/unifyiq/unifyiq.git
        dest: /home/ubuntu/unifyiq
        version: main
        update: yes

    - name: install dependencies from requirements.txt
      pip:
        requirements: requirements.txt
        chdir: /home/ubuntu/unifyiq/unifyiq
        executable: pip3
        extra_args: --default-timeout=1000

    - name: Copy Config file
      copy:
        src: /home/ubuntu/unifyiq.ini
        dest: /home/ubuntu/unifyiq.ini

    - name: Install npm packages
      become_user: root
      npm:
        name: serve
        global: yes

    - name: Install npm dependencies
      npm:
        path: /home/ubuntu/unifyiq/unifyiq/ui/
        state: present
        global: no

    - name: npm build
      command: npm run build
      args:
        chdir: /home/ubuntu/unifyiq/unifyiq/ui/

    - name: Check if the backup folder exists
      become_user: root
      stat:
        path: /var/www/html.bak
      register: folder_stat

    - name: Remove the backup folder
      become_user: root
      file:
        path: /var/www/html.bak
        state: absent
      when: folder_stat.stat.exists == true

    - name: Check if the backup folder exists
      become_user: root
      stat:
        path: /var/www/html
      register: folder_stat_2

    - name: Backup the current folder
      become_user: root
      command: mv /var/www/html /var/www/html.bak
      when: folder_stat_2.stat.exists == true

    - name: Copy build to /var/www/html
      become_user: root
      command: cp -r /home/ubuntu/unifyiq/unifyiq/ui/build/ /var/www/html/

    - name: Copy Nginx config file
      become_user: root
      copy:
        src: /home/ubuntu/unifyiq/unifyiq/playbooks/nginx.default
        dest: /etc/nginx/sites-available/default

    - name: Restart nginx
      become_user: root
      service:
        name: nginx
        state: restarted

    - name: Find the Gunicorn PID
      shell: "pgrep gunicorn"
      register: gunicorn_pid
      ignore_errors: true

    - name: Kill Gunicorn process
      command: "kill {{ item }}"
      with_items: "{{ gunicorn_pid.stdout_lines | default([]) }}"
      when: gunicorn_pid.stdout_lines is defined

    - name: Start Gunicorn
      command: /home/ubuntu/.local/bin/gunicorn -b 0.0.0.0:8080 api.app:app --daemon
      args:
        chdir: /home/ubuntu/unifyiq/unifyiq/
      async: 0
      poll: 0


- name: Install and configure Milvus
  hosts: milvus
  become: yes
  become_user: ubuntu

  tasks:
    - name: Install dependencies
      become_user: root
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Create directory
      file:
        path: /home/ubuntu/milvus/
        state: directory

    - name: Download file
      get_url:
        url: https://github.com/milvus-io/milvus/releases/download/v2.2.11/milvus-standalone-docker-compose.yml
        dest: /home/ubuntu/milvus/docker-compose.yml

    - name: Start Milvus container
      become_user: root
      command: docker-compose up -d
      args:
        chdir: /home/ubuntu/milvus/

